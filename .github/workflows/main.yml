name: Traker CI

on:
  push:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        db: [postgres]
        python-version: [3.8]
        include:
          - db: postgres
            db_port: 5432

    services:
      postgres:
        image: postgres:12.4
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r requirements.txt

      - name: Test with flake8 and django tests
        env:
          SECRET_TOKEN: ${{ secrets.SECRET_TOKEN }}
          api_token: ${{ secrets.API_TOKEN }}
          api_host: ${{ secrets.API_HOST }}
          bot_token: ${{ secrets.BOT_TOKEN }}
          bot_chat: ${{ secrets.BOT_CHAT }}
          second_bot_chat: ${{ secrets.SECOND_BOT_CHAT }}
          refund_bot_chat: ${{ secrets.REFUND_BOT_CHAT }}
          admin_telegram: ${{ secrets.ADMIN_TELEGRAM }}
          moderator_telegram: ${{ secrets.MODERATOR_TELEGRAM }}
          allowed_users: ${{ secrets.ALLOWED_USERS }}
          DB_ENGINE: ${{ secrets.DB_ENGINE }}
          DB_NAME: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST_LOCAL }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          python -m flake8
          python manage.py test
  deploy:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd Report_Traker
            git pull https://Igorishe:${{ secrets.GITHUB_TOKEN }}@github.com/Igorishe/Report_Traker.git
            docker-compose down
            docker-compose up -d --build
            docker-compose exec web python manage.py collectstatic --no-input
            docker-compose exec web python manage.py makemigrations
            docker-compose exec web python manage.py migrate
            docker image prune
  send_message:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!